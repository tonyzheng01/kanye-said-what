{"version":3,"sources":["images/maybe.jpg","images/face.png","images/yup.jpg","images/nope.jpg","lyrics.csv","styles/index.js","footer.jsx","startScreen.jsx","endScreen.jsx","question.jsx","answersBox.jsx","game.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","StartStyle","styled","div","attrs","className","SpeechBubble","Banner","StyledFooter","footer","StyledGame","StyledAnswers","StyledEnd","Footer","href","target","StartScreen","arr","i","length","j","Math","floor","random","src","face","alt","onClick","props","onStart","Component","EndScreen","correct","total","album_map","TCD","LR","GR","808","MBDTF","YZS","TLOP","YE","JIK","Question","song","album","question","replace","AnswersBox","answers","order","forEach","push","disabled","onCorrect","all_ans","onIncorrect","Game","state","curr","feedback","Maybe","disableButtons","random_order","shuffle","handleCorrect","bind","handleIncorrect","this","setState","setTimeout","nextQuestion","Yup","Nope","qas","curr_set","easterEgg","App","handleStart","started","loaded","fetch","lyrics","then","response","text","data","Papa","parse","header","slice","shuffled","all_qas","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,mC,sBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,iBCA3CD,EAAOC,QAAU,IAA0B,oC,6KCGrCC,EAAaC,IAAOC,IAAIC,MAAM,CAClCC,UACE,uFAFY,wEAAGH,CAAH,u0BAoBVI,EAAeJ,IAAOC,IAAIC,MAAM,CACpCC,UAAW,6CADK,0EAAGH,CAAH,2MAgBZK,EAASL,IAAOC,IAAIC,MAAM,CAC9BC,UAAW,mDADD,oEAAGH,CAAH,gDAUNM,EAAeN,IAAOO,OAAOL,MAAM,CACvCC,UACE,sEAFc,0EAAGH,CAAH,wGAWZQ,EAAaR,IAAOC,IAAIC,MAAM,CAClCC,UACE,wGAFY,wEAAGH,CAAH,uKAqBVS,EAAgBT,IAAOC,IAAIC,MAAM,CACrCC,UAAW,0CADM,2EAAGH,CAAH,qUAWbU,EAAYV,IAAOC,IAAIC,MAAM,CACjCC,UACE,mGAFW,uEAAGH,CAAH,wGC7EAW,EAZA,WACb,OACE,kBAACL,EAAD,mDAC8C,IAC5C,uBAAGM,KAAK,iCAAiCC,OAAO,SAAhD,UAFF,M,iBCoCWC,E,sKAnCLC,GACN,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAIE,OAAS,EAAGD,IAAK,CACvC,IAAIE,EAAIF,EAAIG,KAAKC,MAAMD,KAAKE,UAAYN,EAAIE,OAASD,IADd,EAEpB,CAACD,EAAIG,GAAIH,EAAIC,IAA/BD,EAAIC,GAFkC,KAE9BD,EAAIG,GAF0B,KAIzC,OAAOH,I,+BAGC,IAAD,OACP,OACE,kBAAChB,EAAD,KACE,kBAACM,EAAD,KACE,kBAACD,EAAD,KACE,uCAEF,yBAAKkB,IAAKC,IAAMC,IAAI,aAEtB,mbAOE,6BAPF,wGAWA,4BAAQC,QAAS,kBAAM,EAAKC,MAAMC,YAAlC,SACA,kBAAC,EAAD,W,GA9BkBC,a,OCUXC,EAZG,SAACH,GACjB,OACE,kBAAChB,EAAD,qDACgDgB,EAAMI,QADtD,IACgEJ,EAAMK,MADtE,mCAGE,uBAAGnB,KAAK,iCAAiCC,OAAO,SAAhD,YCNAmB,EAAY,CAChBC,IAAK,sBACLC,GAAI,oBACJC,GAAI,aACJC,IAAK,oBACLC,MAAO,oCACPC,IAAK,SACLC,KAAM,oBACNC,GAAI,KACJC,IAAK,iBAgBQC,EAbE,SAAChB,GAChB,OACE,6BACE,2CACc,8BAAOA,EAAMiB,MAD3B,kBAEE,8BAAOX,EAAUN,EAAMkB,SAEzB,kDACA,gCAAMlB,EAAMmB,SAASC,QAAQ,MAAO,YAApC,OCESC,EArBI,SAACrB,GAClB,IAAIsB,EAAU,GAiBd,OAhBAtB,EAAMuB,MAAMC,SAAQ,SAAClC,GACT,IAANA,EACFgC,EAAQG,KACN,4BAAQC,SAAU1B,EAAM0B,SAAU3B,QAASC,EAAM2B,WAC9C3B,EAAM4B,QAAQtC,KAInBgC,EAAQG,KACN,4BAAQC,SAAU1B,EAAM0B,SAAU3B,QAASC,EAAM6B,aAC9C7B,EAAM4B,QAAQtC,QAMhB,kBAACP,EAAD,KAAgBuC,I,kDC0EVQ,E,kDAnFb,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IACD+B,MAAQ,CACXC,KAAM,EACN5B,QAAS,EACTC,MAAO,EACP4B,SAAUC,IACVC,gBAAgB,EAChBC,aAAc,EAAKpC,MAAMqC,QAAQ,CAAC,EAAG,EAAG,EAAG,KAE7C,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBAXN,E,2DAcH,IAAD,OACbE,KAAKC,SAAS,CAAEP,gBAAgB,IAChCQ,YACE,kBACE,EAAKD,SAAS,CACZV,KAAM,EAAKD,MAAMC,KAAO,EACxBC,SAAUC,IACVC,gBAAgB,EAChBC,aAAc,EAAKpC,MAAMqC,QAAQ,CAAC,EAAG,EAAG,EAAG,QAE/C,O,sCAKFI,KAAKG,eACLH,KAAKC,SAAS,CACZtC,QAASqC,KAAKV,MAAM3B,QAAU,EAC9BC,MAAOoC,KAAKV,MAAM1B,MAAQ,EAC1B4B,SAAUY,Q,wCAKZJ,KAAKG,eACLH,KAAKC,SAAS,CAAErC,MAAOoC,KAAKV,MAAM1B,MAAQ,EAAG4B,SAAUa,Q,+BAIvD,GAAIL,KAAKV,MAAMC,KAAOS,KAAKzC,MAAM+C,IAAIxD,OAAQ,CAG3C,IAFA,IAAIyD,EAAWP,KAAKzC,MAAM+C,IAAIN,KAAKV,MAAMC,MACrCJ,EAAU,GACLtC,EAAI,EAAGA,EAAI,EAAGA,IACrBsC,EAAQH,KAAKuB,EAAS1D,IAGxB,IAAI2D,EAAiC,sBAArBD,EAAQ,KAExB,OACE,kBAAClE,EAAD,KACE,yBAAKc,IAAK6C,KAAKV,MAAME,SAAUnC,IAAI,kBACnC,2CACe2C,KAAKV,MAAM3B,QAD1B,IACoCqC,KAAKV,MAAM1B,OAE/C,kBAAC,EAAD,CACEc,SAAU6B,EAAQ,SAClB/B,KAAM+B,EAAQ,KACd9B,MAAO8B,EAAQ,QAEjB,kBAAC,EAAD,CACEpB,QAASA,EACTS,QAASI,KAAKzC,MAAMqC,QACpBd,MAAOkB,KAAKV,MAAMK,aAClBT,UAAWc,KAAKH,cAChBT,YAAaY,KAAKD,gBAClBd,SAAUe,KAAKV,MAAMI,eACrBc,UAAWA,IAEb,kBAAC,EAAD,OAIJ,OACE,kBAAC,EAAD,CAAW7C,QAASqC,KAAKV,MAAM3B,QAASC,MAAOoC,KAAKV,MAAM1B,Y,GA9E/CH,a,kCCyCJgD,E,kDA5Cb,aAAe,IAAD,8BACZ,gBA8BFC,YAAc,WACZ,EAAKT,SAAS,CAAEU,SAAS,KA9BzB,EAAKrB,MAAQ,CACXsB,QAAQ,EACRD,SAAS,GAJC,E,gEASO,IAAD,OAClBE,MAAMC,KACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACJ,EAAKtB,QAAQuB,IAAKC,MAAMF,EAAM,CAAEG,QAAQ,IAA3B,KAA2CC,MAAM,GAAI,OAEnEP,MAAK,SAACQ,GACL,EAAKtB,SAAS,CACZuB,QAASD,EACTX,QAAQ,S,8BAKRhE,GACN,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAIE,OAAS,EAAGD,IAAK,CACvC,IAAIE,EAAIF,EAAIG,KAAKC,MAAMD,KAAKE,UAAYN,EAAIE,OAASD,IADd,EAEpB,CAACD,EAAIG,GAAIH,EAAIC,IAA/BD,EAAIC,GAFkC,KAE9BD,EAAIG,GAF0B,KAIzC,OAAOH,I,+BAQP,OAAKoD,KAAKV,MAAMqB,QAGP,kBAAC,EAAD,CAAML,IAAKN,KAAKV,MAAMkC,QAAS5B,QAASI,KAAKJ,UAF7C,kBAAC,EAAD,CAAapC,QAASwC,KAAKU,kB,GAtCtBjD,aCKEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtB,MAAK,SAAAuB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.15c6eea7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/maybe.badbb7ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/face.0a6d06fd.png\";","module.exports = __webpack_public_path__ + \"static/media/yup.63768686.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nope.2c454c9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lyrics.f9007ffe.csv\";","import styled from \"styled-components/macro\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst StartStyle = styled.div.attrs({\r\n  className:\r\n    \"w-screen h-screen flex flex-col justify-center items-center bg-gray-900 px-64 pb-5\",\r\n})`\r\n  & {\r\n    h1 {\r\n      ${tw`text-black text-6xl`}\r\n      font-family: 'Sedgwick Ave Display', cursive;\r\n    }\r\n    p {\r\n      ${tw`text-white text-xl text-center bg-blue-900 rounded p-2`}\r\n      font-family: 'Roboto Condensed', sans-serif;\r\n    }\r\n    button {\r\n      ${tw`bg-blue-900 hover:bg-blue-700 text-white text-3xl px-2 py-1 m-6 rounded`}\r\n      font-family: 'Bebas Neue', cursive;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SpeechBubble = styled.div.attrs({\r\n  className: \"relative bg-white rounded py-1 px-8 mt-8\",\r\n})`\r\n  & {\r\n    ::after {\r\n      ${tw`block absolute w-0`}\r\n      content: \"\";\r\n      right: -15px;\r\n      bottom: 15px;\r\n      border-top: 8px solid transparent;\r\n      border-bottom: 8px solid transparent;\r\n      border-left: 15px solid white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Banner = styled.div.attrs({\r\n  className: \"flex flex-row justify-center items-center pb-6\",\r\n})`\r\n  & {\r\n    img {\r\n      ${tw`w-64 h-64`}\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledFooter = styled.footer.attrs({\r\n  className:\r\n    \"absolute bottom-0 h-8 w-screen bg-blue-900 text-center text-white\",\r\n})`\r\n  & {\r\n    a {\r\n      ${tw`text-purple-500 font-semibold`}\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledGame = styled.div.attrs({\r\n  className:\r\n    \"w-screen h-screen flex flex-col justify-center items-center bg-gray-900 pb-5 text-white text-center\",\r\n})`\r\n  & {\r\n    h1 {\r\n      ${tw`text-xl`}\r\n    }\r\n    h2 {\r\n      ${tw`text-4xl`}\r\n    }\r\n    span {\r\n      ${tw`text-3xl`}\r\n      font-family: \"Bebas Neue\", cursive;\r\n    }\r\n    img {\r\n      ${tw`w-32 h-32`}\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledAnswers = styled.div.attrs({\r\n  className: \"grid grid-cols-2 gap-2 w-3/4 h-64 m-8\",\r\n})`\r\n  & {\r\n    button {\r\n      ${tw`bg-blue-900 hover:bg-blue-700 text-white text-5xl rounded`}\r\n      font-family: 'Bebas Neue', cursive;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledEnd = styled.div.attrs({\r\n  className:\r\n    \"w-screen h-screen flex flex-col justify-center items-center bg-gray-900 text-center text-white\",\r\n})`\r\n  & {\r\n    a {\r\n      ${tw`text-purple-500 font-semibold`}\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  StartStyle,\r\n  SpeechBubble,\r\n  Banner,\r\n  StyledFooter,\r\n  StyledGame,\r\n  StyledAnswers,\r\n  StyledEnd,\r\n};\r\n","import React from \"react\";\r\nimport { StyledFooter } from \"./styles/index.js\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <StyledFooter>\r\n      Created by Tony Zheng. Find this project on{\" \"}\r\n      <a href=\"https://github.com/tonyzheng01\" target=\"blank\">\r\n        GitHub\r\n      </a>\r\n      !\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Footer from \"./footer\";\r\nimport { StartStyle, SpeechBubble, Banner } from \"./styles/index.js\";\r\nimport face from \"./images/face.png\";\r\n\r\nclass StartScreen extends Component {\r\n  shuffle(arr) {\r\n    for (let i = 0; i < arr.length - 1; i++) {\r\n      let j = i + Math.floor(Math.random() * (arr.length - i));\r\n      [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StartStyle>\r\n        <Banner>\r\n          <SpeechBubble>\r\n            <h1>@#$%&!</h1>\r\n          </SpeechBubble>\r\n          <img src={face} alt=\"Ye Face\" />\r\n        </Banner>\r\n        <p>\r\n          Can you fill in the blank to some of Kanye's most iconic lines? For\r\n          this game, only his solo albums are included, and there is at most one\r\n          line per song. Yes, I know some songs have MANY iconic lines, but then\r\n          every line you see will be from My Beautiful Dark Twisted Fantasy.\r\n          It's current as of Jesus Is King. I may or may not update with\r\n          subsequent albums. There are also easter eggs. Hope you enjoy. :)\r\n          <br />\r\n          DISCLAIMER: There will be explicit language. Nothing will be censored\r\n          out of respect for the artist.\r\n        </p>\r\n        <button onClick={() => this.props.onStart()}>START</button>\r\n        <Footer />\r\n      </StartStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartScreen;\r\n","import React from \"react\";\r\nimport { StyledEnd } from \"./styles/index.js\";\r\n\r\nconst EndScreen = (props) => {\r\n  return (\r\n    <StyledEnd>\r\n      You made it to the end with a total score of {props.correct}/{props.total}\r\n      . Thank you so much for playing!\r\n      <a href=\"https://github.com/tonyzheng01\" target=\"blank\">\r\n        GitHub\r\n      </a>\r\n    </StyledEnd>\r\n  );\r\n};\r\n\r\nexport default EndScreen;\r\n","import React from \"react\";\r\n\r\nconst album_map = {\r\n  TCD: \"The College Dropout\",\r\n  LR: \"Late Registration\",\r\n  GR: \"Graduation\",\r\n  808: \"808s & Heartbreak\",\r\n  MBDTF: \"My Beautiful Dark Twisted Fantasy\",\r\n  YZS: \"Yeezus\",\r\n  TLOP: \"The Life of Pablo\",\r\n  YE: \"ye\",\r\n  JIK: \"Jesus Is King\",\r\n};\r\n\r\nconst Question = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        On the song <span>{props.song}</span>, off the album\r\n        <span>{album_map[props.album]}</span>\r\n      </h1>\r\n      <h1>Kanye West said...</h1>\r\n      <h2>\"{props.question.replace(/\\*/g, \"________\")}\"</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport { StyledAnswers } from \"./styles/index.js\";\r\n\r\nconst AnswersBox = (props) => {\r\n  let answers = [];\r\n  props.order.forEach((i) => {\r\n    if (i === 0) {\r\n      answers.push(\r\n        <button disabled={props.disabled} onClick={props.onCorrect}>\r\n          {props.all_ans[i]}\r\n        </button>\r\n      );\r\n    } else {\r\n      answers.push(\r\n        <button disabled={props.disabled} onClick={props.onIncorrect}>\r\n          {props.all_ans[i]}\r\n        </button>\r\n      );\r\n    }\r\n  });\r\n\r\n  return <StyledAnswers>{answers}</StyledAnswers>;\r\n};\r\n\r\nexport default AnswersBox;\r\n","import React, { Component } from \"react\";\r\nimport EndScreen from \"./endScreen\";\r\nimport Question from \"./question\";\r\nimport AnswersBox from \"./answersBox\";\r\nimport Footer from \"./footer\";\r\nimport { StyledGame } from \"./styles/index.js\";\r\n\r\nimport Maybe from \"./images/maybe.jpg\";\r\nimport Yup from \"./images/yup.jpg\";\r\nimport Nope from \"./images/nope.jpg\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      curr: 0,\r\n      correct: 0,\r\n      total: 0,\r\n      feedback: Maybe,\r\n      disableButtons: false,\r\n      random_order: this.props.shuffle([0, 1, 2, 3]),\r\n    };\r\n    this.handleCorrect = this.handleCorrect.bind(this);\r\n    this.handleIncorrect = this.handleIncorrect.bind(this);\r\n  }\r\n\r\n  nextQuestion() {\r\n    this.setState({ disableButtons: true });\r\n    setTimeout(\r\n      () =>\r\n        this.setState({\r\n          curr: this.state.curr + 1,\r\n          feedback: Maybe,\r\n          disableButtons: false,\r\n          random_order: this.props.shuffle([0, 1, 2, 3]),\r\n        }),\r\n      2000\r\n    );\r\n  }\r\n\r\n  handleCorrect() {\r\n    this.nextQuestion();\r\n    this.setState({\r\n      correct: this.state.correct + 1,\r\n      total: this.state.total + 1,\r\n      feedback: Yup,\r\n    });\r\n  }\r\n\r\n  handleIncorrect() {\r\n    this.nextQuestion();\r\n    this.setState({ total: this.state.total + 1, feedback: Nope });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.curr < this.props.qas.length) {\r\n      let curr_set = this.props.qas[this.state.curr];\r\n      let all_ans = [];\r\n      for (let i = 0; i < 4; i++) {\r\n        all_ans.push(curr_set[i]);\r\n      }\r\n\r\n      let easterEgg = curr_set[\"Song\"] === \"Lost in the World\";\r\n\r\n      return (\r\n        <StyledGame>\r\n          <img src={this.state.feedback} alt=\"Feedback Face\"></img>\r\n          <h1>\r\n            Your Score: {this.state.correct}/{this.state.total}\r\n          </h1>\r\n          <Question\r\n            question={curr_set[\"Question\"]}\r\n            song={curr_set[\"Song\"]}\r\n            album={curr_set[\"Album\"]}\r\n          />\r\n          <AnswersBox\r\n            all_ans={all_ans}\r\n            shuffle={this.props.shuffle}\r\n            order={this.state.random_order}\r\n            onCorrect={this.handleCorrect}\r\n            onIncorrect={this.handleIncorrect}\r\n            disabled={this.state.disableButtons}\r\n            easterEgg={easterEgg}\r\n          />\r\n          <Footer />\r\n        </StyledGame>\r\n      );\r\n    } else {\r\n      return (\r\n        <EndScreen correct={this.state.correct} total={this.state.total} />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\nimport StartScreen from \"./startScreen\";\nimport Game from \"./game\";\n\nimport Papa from \"papaparse\";\nimport lyrics from \"./lyrics.csv\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loaded: false,\n      started: false,\n    };\n  }\n\n  // loads in csv and shuffles\n  componentDidMount() {\n    fetch(lyrics)\n      .then((response) => response.text())\n      .then((data) =>\n        this.shuffle(Papa.parse(data, { header: true })[\"data\"].slice(0, -1))\n      )\n      .then((shuffled) => {\n        this.setState({\n          all_qas: shuffled,\n          loaded: true,\n        });\n      });\n  }\n\n  shuffle(arr) {\n    for (let i = 0; i < arr.length - 1; i++) {\n      let j = i + Math.floor(Math.random() * (arr.length - i));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  handleStart = () => {\n    this.setState({ started: true });\n  };\n\n  render() {\n    if (!this.state.started) {\n      return <StartScreen onStart={this.handleStart} />;\n    } else {\n      return <Game qas={this.state.all_qas} shuffle={this.shuffle} />;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}